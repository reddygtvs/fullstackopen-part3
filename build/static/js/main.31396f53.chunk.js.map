{"version":3,"sources":["Person.js","PersonForm.js","Filter.js","services/persons.js","Notification.js","App.js","index.js"],"names":["Person","person","name","number","id","PersonForm","addNote","newName","newNumber","handleNameChange","handleNumberChange","onSubmit","value","onChange","type","Filter","filterName","handleFilterChange","baseUrl","axios","get","then","response","data","noteObject","post","delete","put","Notification","message","tip","className","App","useState","persons","setPersons","setNewName","setNewNumber","setFilterName","setMessage","setTip","useEffect","console","log","personService","filterItems","filter","toLowerCase","includes","event","target","preventDefault","find","note","window","confirm","map","setTimeout","length","onClick","nameCurrent","catch","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.31396f53.chunk.js","sourcesContent":["import React from 'react'\n\nconst Person = ({ person }) => {\n  return (\n    <div>\n      <li key = {person.id}>{person.name} {person.number}</li>\n      \n    </div>\n    \n  )\n}\n\nexport default Person\n","import React from 'react'\n\nconst PersonForm = ({addNote, newName, newNumber, handleNameChange, handleNumberChange}) => { \n    \n    return (\n        <form onSubmit={addNote}>\n        <div>\n          name: <input value={newName} \n          onChange={handleNameChange}/>\n        </div>\n        <div>\n          number: <input value={newNumber}\n          onChange={handleNumberChange} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    )\n}\n\nexport default PersonForm\n","import React from \"react\"\n\nconst Filter = ({filterName, handleFilterChange}) => {\n    return (\n        <form>\n            <div>\n                filter shown with: <input value={filterName}\n                onChange={handleFilterChange} />\n            </div>\n        </form>\n    )\n    \n}\n\nexport default Filter","import axios from \"axios\";\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = (noteObject) => {\n  const request = axios.post(baseUrl, noteObject);\n  return request.then((response) => response.data);\n};\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then((response) => response.data);\n};\n\nconst update = (id, noteObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, noteObject);\n  return request.then((response) => response.data);\n};\n\nexport default { getAll, create, remove, update };\n","import './App.css'\nconst Notification = ( {message, tip} ) => {\n    if (message === null)  {\n        return null\n    }\n    return (\n        <div className={tip}>\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import React, { useState, useEffect } from \"react\";\nimport Person from \"./Person\";\nimport PersonForm from \"./PersonForm\";\nimport Filter from \"./Filter\";\nimport personService from \"./services/persons\";\nimport Notification from \"./Notification\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filterName, setFilterName] = useState(\"\");\n  const [message, setMessage] = useState(null);\n  const [tip, setTip] = useState(\"confirm\");\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n  const fet = () => {\n    console.log(\"start\");\n    personService.getAll().then((response) => {\n      console.log(\"fulfilled\");\n      // console.log(response)\n      setPersons(response);\n    });\n  };\n\n  useEffect(fet, []);\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleFilterChange = (event) => {\n    setFilterName(event.target.value);\n  };\n\n  const filterItems = persons.filter((person) => {\n    return person.name.toLowerCase().includes(filterName.toLowerCase());\n  });\n  const addNote = (event) => {\n    event.preventDefault();\n\n    const noteObject = {\n      name: newName,\n      // id: newName,\n      number: newNumber,\n    };\n\n    if (persons.find((person) => person.name === noteObject.name)) {\n      const note = persons.find((person) => person.name === noteObject.name);\n      if (\n        window.confirm(\n          `${noteObject.name} is already added to phonebook. Do you want to update the number?`\n        )\n      ) {\n        personService.update(note.id, noteObject).then((response) => {\n          console.log(response);\n          setPersons(\n            persons.map((person) =>\n              person.id !== response.id ? person : response\n            )\n          );\n          setMessage(`Number for ${note.name} has been updated`);\n          setTip(\"confirm\");\n          setNewName(\"\");\n          setNewNumber(\"\");\n          setTimeout(() => {\n            setMessage(null);\n          }, 5000);\n        });\n      }\n\n      return;\n    }\n    personService.create(noteObject).then((response) => {\n      console.log(response);\n      setPersons(response);\n      setMessage(`${response[response.length - 1].name} has been added`);\n      setTip(\"confirm\");\n      setNewName(\"\");\n      setNewNumber(\"\");\n      setTimeout(() => {\n        setMessage(null);\n      }, 5000);\n    });\n\n    // setPersons(persons.concat(noteObject))\n  };\n  const removeEntry = (id, nameCurrent) => {\n    if (window.confirm(`Do you really want to delete ${nameCurrent}?`)) {\n      personService\n        .remove(id)\n        .then((response) => {\n          console.log(response);\n          setPersons(persons.filter((person) => person.id !== id));\n          console.log(setPersons);\n          setMessage(`${nameCurrent} has been removed from the server`);\n          setTip(\"confirm\");\n          setTimeout(() => {\n            setMessage(null);\n          }, 5000);\n        })\n        .catch((error) => {\n          setMessage(`${nameCurrent} has already been removed from the server`);\n          setTip(\"error\");\n          setTimeout(() => {\n            setMessage(null);\n          }, 5000);\n          setPersons(persons.filter((person) => person.id !== id));\n        });\n    }\n  };\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message={message} tip={tip} />\n      {\n        <Filter\n          filterName={filterName}\n          handleFilterChange={handleFilterChange}\n        />\n      }\n\n      <h2>Add a new member</h2>\n      {\n        <PersonForm\n          addNote={addNote}\n          newName={newName}\n          newNumber={newNumber}\n          handleNameChange={handleNameChange}\n          handleNumberChange={handleNumberChange}\n        />\n      }\n\n      {/* <div>debug: {newName}</div> */}\n      <h1>Numbers</h1>\n\n      {filterItems.map((person) => (\n        <div>\n          <Person person={person} />\n          <button onClick={() => removeEntry(person.id, person.name)}>\n            delete\n          </button>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom'\nimport App from './App.js'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}